/**
 * app.bkper.com
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class Account {
    /**
    * The id of agent that created the resource
    */
    'agentId'?: string;
    /**
    * Archived accounts are kept for history
    */
    'archived'?: boolean;
    /**
    * The overall account balance
    */
    'balance'?: string;
    /**
    * The balance of the account for checked transactions
    */
    'checkedBalance'?: string;
    /**
    * The creation timestamp, in milliseconds
    */
    'createdAt'?: string;
    /**
    * Credit nature or Debit otherwise
    */
    'credit'?: boolean;
    /**
    * The ids of groups of the account
    */
    'groups'?: Array<string>;
    /**
    * Tell if the account has transaction posted
    */
    'hasTransactionPosted'?: boolean;
    /**
    * The unique id that identifies the Account in the Book
    */
    'id'?: string;
    /**
    * The name of the Account
    */
    'name'?: string;
    /**
    * The name of the Account, lowercase, without spaces or special characters
    */
    'normalizedName'?: string;
    /**
    * Permanent are such as bank accounts, customers or the like
    */
    'permanent'?: boolean;
    /**
    * The key/value custom properties of the Account
    */
    'properties'?: { [key: string]: string; };
    /**
    * The type of the account
    */
    'type'?: Account.Type;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "agentId",
            "baseName": "agentId",
            "type": "string"
        },
        {
            "name": "archived",
            "baseName": "archived",
            "type": "boolean"
        },
        {
            "name": "balance",
            "baseName": "balance",
            "type": "string"
        },
        {
            "name": "checkedBalance",
            "baseName": "checkedBalance",
            "type": "string"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "string"
        },
        {
            "name": "credit",
            "baseName": "credit",
            "type": "boolean"
        },
        {
            "name": "groups",
            "baseName": "groups",
            "type": "Array<string>"
        },
        {
            "name": "hasTransactionPosted",
            "baseName": "hasTransactionPosted",
            "type": "boolean"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "normalizedName",
            "baseName": "normalizedName",
            "type": "string"
        },
        {
            "name": "permanent",
            "baseName": "permanent",
            "type": "boolean"
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Account.Type"
        }    ];

    static getAttributeTypeMap() {
        return Account.attributeTypeMap;
    }
}

export namespace Account {
    export enum Type {
        Asset = <any> 'ASSET',
        Liability = <any> 'LIABILITY',
        Incoming = <any> 'INCOMING',
        Outgoing = <any> 'OUTGOING'
    }
}
